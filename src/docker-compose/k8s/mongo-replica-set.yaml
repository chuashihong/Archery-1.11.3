apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
  clusterIP: None # Headless service for StatefulSet
  selector:
    app: mongo

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo-service"
  replicas: 3
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:5.0
          command:
            - "mongod"
            - "--replSet"  # Enables replica set
            - "rs0"
            - "--bind_ip_all"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          readinessProbe:
            exec:
              command:
                - "mongo"
                - "--eval"
                - "rs.status()" # Ensures readiness after replica set initiation
          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"
            requests:
              memory: "500Mi"
              cpu: "250m"
      terminationGracePeriodSeconds: 30
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi

---
apiVersion: batch/v1
kind: Job
metadata:
  name: mongo-init-replica-set
spec:
  template:
    spec:
      containers:
        - name: mongo-init
          image: mongo:5.0
          command:
            - "mongo"
            - "--host"
            - "mongo-0.mongo-service"
            - "--eval"
            - >
              rs.initiate({
                _id: "rs0",
                members: [
                  { _id: 0, host: "mongo-0.mongo-service:27017" },
                  { _id: 1, host: "mongo-1.mongo-service:27017" },
                  { _id: 2, host: "mongo-2.mongo-service:27017" }
                ]
              });
      restartPolicy: OnFailure
