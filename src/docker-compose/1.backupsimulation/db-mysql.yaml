# BackupRecord DB Deployment (log-db-instance)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-db-instance
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-db-instance
  template:
    metadata:
      labels:
        app: log-db-instance
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: chuashihong
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: init-script
          configMap:
            name: log-db-init-script

---
# Config map for log-db-instance
apiVersion: v1
kind: ConfigMap
metadata:
  name: log-db-init-script
data:
  log-db-init.sql: |
    CREATE DATABASE IF NOT EXISTS backup;

    USE backup;

    CREATE TABLE IF NOT EXISTS BackupRecord (
        id INT AUTO_INCREMENT PRIMARY KEY,
        instance_name VARCHAR(255),
        database_type VARCHAR(50),
        start_time DATETIME,
        end_time DATETIME,
        time_spent FLOAT,
        s3_uri TEXT
    );
    
    CREATE TABLE IF NOT EXISTS IncBackupRecord (
        id INT AUTO_INCREMENT PRIMARY KEY,
        instance_name VARCHAR(255),
        database_type VARCHAR(50),
        start_time DATETIME,
        end_time DATETIME,
        s3_uri TEXT
    );
---
# MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-instance
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-instance
  template:
    metadata:
      labels:
        app: mysql-instance
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: chuashihong
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-config-volume
              mountPath: /etc/mysql/conf.d/
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: init-script
          configMap:
            name: mysql-init-script
        - name: mysql-config-volume
          configMap:
            name: mysql-config
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc

---

# ConfigMap for MySQL Initialization Script
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
data:
  mysql-init.sql: |
    CREATE DATABASE IF NOT EXISTS db1;
    CREATE DATABASE IF NOT EXISTS db2;

    USE db1;
    CREATE TABLE IF NOT EXISTS table1 (
        id INT AUTO_INCREMENT PRIMARY KEY,
        value VARCHAR(255) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS table2 (
        id INT AUTO_INCREMENT PRIMARY KEY,
        value VARCHAR(255) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    USE db2;
    CREATE TABLE IF NOT EXISTS table3 (
        id INT AUTO_INCREMENT PRIMARY KEY,
        value VARCHAR(255) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS table4 (
        id INT AUTO_INCREMENT PRIMARY KEY,
        value VARCHAR(255) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

---

# ConfigMap for MySQL Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  my.cnf: |
    [mysqld]
    server-id=1
    log-bin=/var/lib/mysql/mysql-bin.log
    binlog_format=ROW
    expire_logs_days=7
    max_binlog_size=100M

---

# PersistentVolumeClaim for MySQL Data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-instance-service
spec:
  selector:
    app: mysql-instance
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
      
---
apiVersion: v1
kind: Service
metadata:
  name: log-db-service
spec:
  selector:
    app: log-db-instance
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
