# BackupRecord DB Deployment (log-db-instance)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-db-instance
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-db-instance
  template:
    metadata:
      labels:
        app: log-db-instance
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: chuashihong
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: init-script
          configMap:
            name: log-db-init-script

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: log-db-init-script
data:
  log-db-init.sql: |
    CREATE DATABASE IF NOT EXISTS backup_log_db;

    USE backup_log_db;

    CREATE TABLE IF NOT EXISTS BackupRecord (
        id INT AUTO_INCREMENT PRIMARY KEY,
        instance_name VARCHAR(255),
        database_type VARCHAR(50),
        start_time DATETIME,
        end_time DATETIME,
        s3_uri TEXT
    );
---
# Target Database Deployment (mysql-instance)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-instance
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-instance
  template:
    metadata:
      labels:
        app: mysql-instance
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: chuashihong
          ports:
            - containerPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-instance-service
spec:
  selector:
    app: mysql-instance
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
      
---
apiVersion: v1
kind: Service
metadata:
  name: log-db-service
spec:
  selector:
    app: log-db-instance
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
