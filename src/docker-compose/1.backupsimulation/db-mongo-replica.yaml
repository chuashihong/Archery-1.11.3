apiVersion: v1
kind: Service
metadata:
  name: mongo-headless
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
  clusterIP: None
  selector:
    app: mongo

---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: mongo
# spec:
#   serviceName: mongo-headless
#   replicas: 3
#   selector:
#     matchLabels:
#       app: mongo
#   template:
#     metadata:
#       labels:
#         app: mongo
#     spec:
#       containers:
#       - name: mongo
#         image: mongo:6.0
#         command:
#           - "bash"
#           - "-c"
#           - |
#             mongod --replSet rs0 --bind_ip_all &
#             sleep 5
#             mongosh --eval "
#               if (rs.status().ok == undefined) {
#                 rs.initiate({
#                   _id: 'rs0',
#                   members: [
#                     { _id: 0, host: 'mongo-0.mongo-headless.default.svc.cluster.local:27017' },
#                     { _id: 1, host: 'mongo-1.mongo-headless.default.svc.cluster.local:27017' },
#                     { _id: 2, host: 'mongo-2.mongo-headless.default.svc.cluster.local:27017' }
#                   ]
#                 });
#               }"
#             tail -f /dev/null
#         ports:
#         - containerPort: 27017
#         volumeMounts:
#         - name: mongo-data
#           mountPath: /data/db
#       volumes:
#         - name: mongo-config
#           configMap:
#             name: mongo-config
#   volumeClaimTemplates:
#   - metadata:
#       name: mongo-data
#     spec:
#       accessModes: ["ReadWriteOnce"]
#       resources:
#         requests:
#           storage: 1Gi

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: mongo-headless
  replicas: 3
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo
        image: mongo:6.0
        command:
          - "mongod"
          - "--bind_ip_all"
          - "--replSet"
          - "rs0"
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-data-volume
          mountPath: /data/db
        - name: mongo-config
          mountPath: /etc/mongo
        readinessProbe:
          exec:
            command:
              - "mongosh"
              - "--eval"
              - "rs.status()"
          initialDelaySeconds: 5
          timeoutSeconds: 5
      volumes:
        - name: mongo-config
          configMap:
            name: mongo-config
  volumeClaimTemplates:
  - metadata:
      name: mongo-data-volume
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-config
data:
  mongo-init.js: |
    rs.initiate({
      _id: "rs0",
      members: [
        { _id: 0, host: "mongo-0.mongo-headless.default.svc.cluster.local:27017" },
        { _id: 1, host: "mongo-1.mongo-headless.default.svc.cluster.local:27017" },
        { _id: 2, host: "mongo-2.mongo-headless.default.svc.cluster.local:27017" }
      ]
    });
